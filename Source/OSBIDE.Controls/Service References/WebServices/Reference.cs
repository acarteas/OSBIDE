//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34003
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace OSBIDE.Controls.WebServices {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="", ConfigurationName="WebServices.OsbideWebService")]
    public interface OsbideWebService {
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:OsbideWebService/Echo", ReplyAction="urn:OsbideWebService/EchoResponse")]
        string Echo(string toEcho);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:OsbideWebService/Echo", ReplyAction="urn:OsbideWebService/EchoResponse")]
        System.IAsyncResult BeginEcho(string toEcho, System.AsyncCallback callback, object asyncState);
        
        string EndEcho(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:OsbideWebService/Login", ReplyAction="urn:OsbideWebService/LoginResponse")]
        string Login(string email, string hashedPassword);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:OsbideWebService/Login", ReplyAction="urn:OsbideWebService/LoginResponse")]
        System.IAsyncResult BeginLogin(string email, string hashedPassword, System.AsyncCallback callback, object asyncState);
        
        string EndLogin(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:OsbideWebService/GetActiveUser", ReplyAction="urn:OsbideWebService/GetActiveUserResponse")]
        OSBIDE.Library.Models.OsbideUser GetActiveUser(string authToken);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:OsbideWebService/GetActiveUser", ReplyAction="urn:OsbideWebService/GetActiveUserResponse")]
        System.IAsyncResult BeginGetActiveUser(string authToken, System.AsyncCallback callback, object asyncState);
        
        OSBIDE.Library.Models.OsbideUser EndGetActiveUser(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:OsbideWebService/IsValidKey", ReplyAction="urn:OsbideWebService/IsValidKeyResponse")]
        bool IsValidKey(string authToken);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:OsbideWebService/IsValidKey", ReplyAction="urn:OsbideWebService/IsValidKeyResponse")]
        System.IAsyncResult BeginIsValidKey(string authToken, System.AsyncCallback callback, object asyncState);
        
        bool EndIsValidKey(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:OsbideWebService/GetMostRecentWhatsNewItem", ReplyAction="urn:OsbideWebService/GetMostRecentWhatsNewItemResponse")]
        System.DateTime GetMostRecentWhatsNewItem();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:OsbideWebService/GetMostRecentWhatsNewItem", ReplyAction="urn:OsbideWebService/GetMostRecentWhatsNewItemResponse")]
        System.IAsyncResult BeginGetMostRecentWhatsNewItem(System.AsyncCallback callback, object asyncState);
        
        System.DateTime EndGetMostRecentWhatsNewItem(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:OsbideWebService/GetMostRecentSocialActivity", ReplyAction="urn:OsbideWebService/GetMostRecentSocialActivityResponse")]
        System.DateTime GetMostRecentSocialActivity(string authToken);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:OsbideWebService/GetMostRecentSocialActivity", ReplyAction="urn:OsbideWebService/GetMostRecentSocialActivityResponse")]
        System.IAsyncResult BeginGetMostRecentSocialActivity(string authToken, System.AsyncCallback callback, object asyncState);
        
        System.DateTime EndGetMostRecentSocialActivity(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:OsbideWebService/GetCoursesForUser", ReplyAction="urn:OsbideWebService/GetCoursesForUserResponse")]
        OSBIDE.Library.Models.Course[] GetCoursesForUser(string authToken);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:OsbideWebService/GetCoursesForUser", ReplyAction="urn:OsbideWebService/GetCoursesForUserResponse")]
        System.IAsyncResult BeginGetCoursesForUser(string authToken, System.AsyncCallback callback, object asyncState);
        
        OSBIDE.Library.Models.Course[] EndGetCoursesForUser(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:OsbideWebService/GetAssignmentsForCourse", ReplyAction="urn:OsbideWebService/GetAssignmentsForCourseResponse")]
        OSBIDE.Library.Models.Assignment[] GetAssignmentsForCourse(int courseId, string authToken);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:OsbideWebService/GetAssignmentsForCourse", ReplyAction="urn:OsbideWebService/GetAssignmentsForCourseResponse")]
        System.IAsyncResult BeginGetAssignmentsForCourse(int courseId, string authToken, System.AsyncCallback callback, object asyncState);
        
        OSBIDE.Library.Models.Assignment[] EndGetAssignmentsForCourse(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:OsbideWebService/SubmitAssignment", ReplyAction="urn:OsbideWebService/SubmitAssignmentResponse")]
        int SubmitAssignment(int assignmentId, OSBIDE.Library.Models.EventLog assignmentLog, string authToken);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:OsbideWebService/SubmitAssignment", ReplyAction="urn:OsbideWebService/SubmitAssignmentResponse")]
        System.IAsyncResult BeginSubmitAssignment(int assignmentId, OSBIDE.Library.Models.EventLog assignmentLog, string authToken, System.AsyncCallback callback, object asyncState);
        
        int EndSubmitAssignment(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:OsbideWebService/GetLastAssignmentSubmitDate", ReplyAction="urn:OsbideWebService/GetLastAssignmentSubmitDateResponse")]
        System.DateTime GetLastAssignmentSubmitDate(int assignmentId, string authToken);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:OsbideWebService/GetLastAssignmentSubmitDate", ReplyAction="urn:OsbideWebService/GetLastAssignmentSubmitDateResponse")]
        System.IAsyncResult BeginGetLastAssignmentSubmitDate(int assignmentId, string authToken, System.AsyncCallback callback, object asyncState);
        
        System.DateTime EndGetLastAssignmentSubmitDate(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:OsbideWebService/SubmitLocalErrorLog", ReplyAction="urn:OsbideWebService/SubmitLocalErrorLogResponse")]
        int SubmitLocalErrorLog(OSBIDE.Library.Models.LocalErrorLog errorLog, string authToken);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:OsbideWebService/SubmitLocalErrorLog", ReplyAction="urn:OsbideWebService/SubmitLocalErrorLogResponse")]
        System.IAsyncResult BeginSubmitLocalErrorLog(OSBIDE.Library.Models.LocalErrorLog errorLog, string authToken, System.AsyncCallback callback, object asyncState);
        
        int EndSubmitLocalErrorLog(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:OsbideWebService/SubmitLog", ReplyAction="urn:OsbideWebService/SubmitLogResponse")]
        int SubmitLog(OSBIDE.Library.Models.EventLog log, string authToken);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:OsbideWebService/SubmitLog", ReplyAction="urn:OsbideWebService/SubmitLogResponse")]
        System.IAsyncResult BeginSubmitLog(OSBIDE.Library.Models.EventLog log, string authToken, System.AsyncCallback callback, object asyncState);
        
        int EndSubmitLog(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:OsbideWebService/LibraryVersionNumber", ReplyAction="urn:OsbideWebService/LibraryVersionNumberResponse")]
        string LibraryVersionNumber();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:OsbideWebService/LibraryVersionNumber", ReplyAction="urn:OsbideWebService/LibraryVersionNumberResponse")]
        System.IAsyncResult BeginLibraryVersionNumber(System.AsyncCallback callback, object asyncState);
        
        string EndLibraryVersionNumber(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:OsbideWebService/OsbidePackageUrl", ReplyAction="urn:OsbideWebService/OsbidePackageUrlResponse")]
        string OsbidePackageUrl();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:OsbideWebService/OsbidePackageUrl", ReplyAction="urn:OsbideWebService/OsbidePackageUrlResponse")]
        System.IAsyncResult BeginOsbidePackageUrl(System.AsyncCallback callback, object asyncState);
        
        string EndOsbidePackageUrl(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface OsbideWebServiceChannel : OSBIDE.Controls.WebServices.OsbideWebService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EchoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public EchoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public LoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetActiveUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetActiveUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public OSBIDE.Library.Models.OsbideUser Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((OSBIDE.Library.Models.OsbideUser)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class IsValidKeyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public IsValidKeyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetMostRecentWhatsNewItemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetMostRecentWhatsNewItemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.DateTime Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.DateTime)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetMostRecentSocialActivityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetMostRecentSocialActivityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.DateTime Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.DateTime)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCoursesForUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCoursesForUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public OSBIDE.Library.Models.Course[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((OSBIDE.Library.Models.Course[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAssignmentsForCourseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAssignmentsForCourseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public OSBIDE.Library.Models.Assignment[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((OSBIDE.Library.Models.Assignment[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SubmitAssignmentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SubmitAssignmentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetLastAssignmentSubmitDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetLastAssignmentSubmitDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.DateTime Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.DateTime)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SubmitLocalErrorLogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SubmitLocalErrorLogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SubmitLogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SubmitLogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LibraryVersionNumberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public LibraryVersionNumberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class OsbidePackageUrlCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public OsbidePackageUrlCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class OsbideWebServiceClient : System.ServiceModel.ClientBase<OSBIDE.Controls.WebServices.OsbideWebService>, OSBIDE.Controls.WebServices.OsbideWebService {
        
        private BeginOperationDelegate onBeginEchoDelegate;
        
        private EndOperationDelegate onEndEchoDelegate;
        
        private System.Threading.SendOrPostCallback onEchoCompletedDelegate;
        
        private BeginOperationDelegate onBeginLoginDelegate;
        
        private EndOperationDelegate onEndLoginDelegate;
        
        private System.Threading.SendOrPostCallback onLoginCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetActiveUserDelegate;
        
        private EndOperationDelegate onEndGetActiveUserDelegate;
        
        private System.Threading.SendOrPostCallback onGetActiveUserCompletedDelegate;
        
        private BeginOperationDelegate onBeginIsValidKeyDelegate;
        
        private EndOperationDelegate onEndIsValidKeyDelegate;
        
        private System.Threading.SendOrPostCallback onIsValidKeyCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetMostRecentWhatsNewItemDelegate;
        
        private EndOperationDelegate onEndGetMostRecentWhatsNewItemDelegate;
        
        private System.Threading.SendOrPostCallback onGetMostRecentWhatsNewItemCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetMostRecentSocialActivityDelegate;
        
        private EndOperationDelegate onEndGetMostRecentSocialActivityDelegate;
        
        private System.Threading.SendOrPostCallback onGetMostRecentSocialActivityCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCoursesForUserDelegate;
        
        private EndOperationDelegate onEndGetCoursesForUserDelegate;
        
        private System.Threading.SendOrPostCallback onGetCoursesForUserCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAssignmentsForCourseDelegate;
        
        private EndOperationDelegate onEndGetAssignmentsForCourseDelegate;
        
        private System.Threading.SendOrPostCallback onGetAssignmentsForCourseCompletedDelegate;
        
        private BeginOperationDelegate onBeginSubmitAssignmentDelegate;
        
        private EndOperationDelegate onEndSubmitAssignmentDelegate;
        
        private System.Threading.SendOrPostCallback onSubmitAssignmentCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetLastAssignmentSubmitDateDelegate;
        
        private EndOperationDelegate onEndGetLastAssignmentSubmitDateDelegate;
        
        private System.Threading.SendOrPostCallback onGetLastAssignmentSubmitDateCompletedDelegate;
        
        private BeginOperationDelegate onBeginSubmitLocalErrorLogDelegate;
        
        private EndOperationDelegate onEndSubmitLocalErrorLogDelegate;
        
        private System.Threading.SendOrPostCallback onSubmitLocalErrorLogCompletedDelegate;
        
        private BeginOperationDelegate onBeginSubmitLogDelegate;
        
        private EndOperationDelegate onEndSubmitLogDelegate;
        
        private System.Threading.SendOrPostCallback onSubmitLogCompletedDelegate;
        
        private BeginOperationDelegate onBeginLibraryVersionNumberDelegate;
        
        private EndOperationDelegate onEndLibraryVersionNumberDelegate;
        
        private System.Threading.SendOrPostCallback onLibraryVersionNumberCompletedDelegate;
        
        private BeginOperationDelegate onBeginOsbidePackageUrlDelegate;
        
        private EndOperationDelegate onEndOsbidePackageUrlDelegate;
        
        private System.Threading.SendOrPostCallback onOsbidePackageUrlCompletedDelegate;
        
        public OsbideWebServiceClient() {
        }
        
        public OsbideWebServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public OsbideWebServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public OsbideWebServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public OsbideWebServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<EchoCompletedEventArgs> EchoCompleted;
        
        public event System.EventHandler<LoginCompletedEventArgs> LoginCompleted;
        
        public event System.EventHandler<GetActiveUserCompletedEventArgs> GetActiveUserCompleted;
        
        public event System.EventHandler<IsValidKeyCompletedEventArgs> IsValidKeyCompleted;
        
        public event System.EventHandler<GetMostRecentWhatsNewItemCompletedEventArgs> GetMostRecentWhatsNewItemCompleted;
        
        public event System.EventHandler<GetMostRecentSocialActivityCompletedEventArgs> GetMostRecentSocialActivityCompleted;
        
        public event System.EventHandler<GetCoursesForUserCompletedEventArgs> GetCoursesForUserCompleted;
        
        public event System.EventHandler<GetAssignmentsForCourseCompletedEventArgs> GetAssignmentsForCourseCompleted;
        
        public event System.EventHandler<SubmitAssignmentCompletedEventArgs> SubmitAssignmentCompleted;
        
        public event System.EventHandler<GetLastAssignmentSubmitDateCompletedEventArgs> GetLastAssignmentSubmitDateCompleted;
        
        public event System.EventHandler<SubmitLocalErrorLogCompletedEventArgs> SubmitLocalErrorLogCompleted;
        
        public event System.EventHandler<SubmitLogCompletedEventArgs> SubmitLogCompleted;
        
        public event System.EventHandler<LibraryVersionNumberCompletedEventArgs> LibraryVersionNumberCompleted;
        
        public event System.EventHandler<OsbidePackageUrlCompletedEventArgs> OsbidePackageUrlCompleted;
        
        public string Echo(string toEcho) {
            return base.Channel.Echo(toEcho);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginEcho(string toEcho, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginEcho(toEcho, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndEcho(System.IAsyncResult result) {
            return base.Channel.EndEcho(result);
        }
        
        private System.IAsyncResult OnBeginEcho(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string toEcho = ((string)(inValues[0]));
            return this.BeginEcho(toEcho, callback, asyncState);
        }
        
        private object[] OnEndEcho(System.IAsyncResult result) {
            string retVal = this.EndEcho(result);
            return new object[] {
                    retVal};
        }
        
        private void OnEchoCompleted(object state) {
            if ((this.EchoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.EchoCompleted(this, new EchoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void EchoAsync(string toEcho) {
            this.EchoAsync(toEcho, null);
        }
        
        public void EchoAsync(string toEcho, object userState) {
            if ((this.onBeginEchoDelegate == null)) {
                this.onBeginEchoDelegate = new BeginOperationDelegate(this.OnBeginEcho);
            }
            if ((this.onEndEchoDelegate == null)) {
                this.onEndEchoDelegate = new EndOperationDelegate(this.OnEndEcho);
            }
            if ((this.onEchoCompletedDelegate == null)) {
                this.onEchoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnEchoCompleted);
            }
            base.InvokeAsync(this.onBeginEchoDelegate, new object[] {
                        toEcho}, this.onEndEchoDelegate, this.onEchoCompletedDelegate, userState);
        }
        
        public string Login(string email, string hashedPassword) {
            return base.Channel.Login(email, hashedPassword);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginLogin(string email, string hashedPassword, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginLogin(email, hashedPassword, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndLogin(System.IAsyncResult result) {
            return base.Channel.EndLogin(result);
        }
        
        private System.IAsyncResult OnBeginLogin(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string email = ((string)(inValues[0]));
            string hashedPassword = ((string)(inValues[1]));
            return this.BeginLogin(email, hashedPassword, callback, asyncState);
        }
        
        private object[] OnEndLogin(System.IAsyncResult result) {
            string retVal = this.EndLogin(result);
            return new object[] {
                    retVal};
        }
        
        private void OnLoginCompleted(object state) {
            if ((this.LoginCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.LoginCompleted(this, new LoginCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void LoginAsync(string email, string hashedPassword) {
            this.LoginAsync(email, hashedPassword, null);
        }
        
        public void LoginAsync(string email, string hashedPassword, object userState) {
            if ((this.onBeginLoginDelegate == null)) {
                this.onBeginLoginDelegate = new BeginOperationDelegate(this.OnBeginLogin);
            }
            if ((this.onEndLoginDelegate == null)) {
                this.onEndLoginDelegate = new EndOperationDelegate(this.OnEndLogin);
            }
            if ((this.onLoginCompletedDelegate == null)) {
                this.onLoginCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnLoginCompleted);
            }
            base.InvokeAsync(this.onBeginLoginDelegate, new object[] {
                        email,
                        hashedPassword}, this.onEndLoginDelegate, this.onLoginCompletedDelegate, userState);
        }
        
        public OSBIDE.Library.Models.OsbideUser GetActiveUser(string authToken) {
            return base.Channel.GetActiveUser(authToken);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetActiveUser(string authToken, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetActiveUser(authToken, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public OSBIDE.Library.Models.OsbideUser EndGetActiveUser(System.IAsyncResult result) {
            return base.Channel.EndGetActiveUser(result);
        }
        
        private System.IAsyncResult OnBeginGetActiveUser(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string authToken = ((string)(inValues[0]));
            return this.BeginGetActiveUser(authToken, callback, asyncState);
        }
        
        private object[] OnEndGetActiveUser(System.IAsyncResult result) {
            OSBIDE.Library.Models.OsbideUser retVal = this.EndGetActiveUser(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetActiveUserCompleted(object state) {
            if ((this.GetActiveUserCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetActiveUserCompleted(this, new GetActiveUserCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetActiveUserAsync(string authToken) {
            this.GetActiveUserAsync(authToken, null);
        }
        
        public void GetActiveUserAsync(string authToken, object userState) {
            if ((this.onBeginGetActiveUserDelegate == null)) {
                this.onBeginGetActiveUserDelegate = new BeginOperationDelegate(this.OnBeginGetActiveUser);
            }
            if ((this.onEndGetActiveUserDelegate == null)) {
                this.onEndGetActiveUserDelegate = new EndOperationDelegate(this.OnEndGetActiveUser);
            }
            if ((this.onGetActiveUserCompletedDelegate == null)) {
                this.onGetActiveUserCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetActiveUserCompleted);
            }
            base.InvokeAsync(this.onBeginGetActiveUserDelegate, new object[] {
                        authToken}, this.onEndGetActiveUserDelegate, this.onGetActiveUserCompletedDelegate, userState);
        }
        
        public bool IsValidKey(string authToken) {
            return base.Channel.IsValidKey(authToken);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginIsValidKey(string authToken, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginIsValidKey(authToken, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndIsValidKey(System.IAsyncResult result) {
            return base.Channel.EndIsValidKey(result);
        }
        
        private System.IAsyncResult OnBeginIsValidKey(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string authToken = ((string)(inValues[0]));
            return this.BeginIsValidKey(authToken, callback, asyncState);
        }
        
        private object[] OnEndIsValidKey(System.IAsyncResult result) {
            bool retVal = this.EndIsValidKey(result);
            return new object[] {
                    retVal};
        }
        
        private void OnIsValidKeyCompleted(object state) {
            if ((this.IsValidKeyCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.IsValidKeyCompleted(this, new IsValidKeyCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void IsValidKeyAsync(string authToken) {
            this.IsValidKeyAsync(authToken, null);
        }
        
        public void IsValidKeyAsync(string authToken, object userState) {
            if ((this.onBeginIsValidKeyDelegate == null)) {
                this.onBeginIsValidKeyDelegate = new BeginOperationDelegate(this.OnBeginIsValidKey);
            }
            if ((this.onEndIsValidKeyDelegate == null)) {
                this.onEndIsValidKeyDelegate = new EndOperationDelegate(this.OnEndIsValidKey);
            }
            if ((this.onIsValidKeyCompletedDelegate == null)) {
                this.onIsValidKeyCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnIsValidKeyCompleted);
            }
            base.InvokeAsync(this.onBeginIsValidKeyDelegate, new object[] {
                        authToken}, this.onEndIsValidKeyDelegate, this.onIsValidKeyCompletedDelegate, userState);
        }
        
        public System.DateTime GetMostRecentWhatsNewItem() {
            return base.Channel.GetMostRecentWhatsNewItem();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetMostRecentWhatsNewItem(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetMostRecentWhatsNewItem(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.DateTime EndGetMostRecentWhatsNewItem(System.IAsyncResult result) {
            return base.Channel.EndGetMostRecentWhatsNewItem(result);
        }
        
        private System.IAsyncResult OnBeginGetMostRecentWhatsNewItem(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetMostRecentWhatsNewItem(callback, asyncState);
        }
        
        private object[] OnEndGetMostRecentWhatsNewItem(System.IAsyncResult result) {
            System.DateTime retVal = this.EndGetMostRecentWhatsNewItem(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetMostRecentWhatsNewItemCompleted(object state) {
            if ((this.GetMostRecentWhatsNewItemCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetMostRecentWhatsNewItemCompleted(this, new GetMostRecentWhatsNewItemCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetMostRecentWhatsNewItemAsync() {
            this.GetMostRecentWhatsNewItemAsync(null);
        }
        
        public void GetMostRecentWhatsNewItemAsync(object userState) {
            if ((this.onBeginGetMostRecentWhatsNewItemDelegate == null)) {
                this.onBeginGetMostRecentWhatsNewItemDelegate = new BeginOperationDelegate(this.OnBeginGetMostRecentWhatsNewItem);
            }
            if ((this.onEndGetMostRecentWhatsNewItemDelegate == null)) {
                this.onEndGetMostRecentWhatsNewItemDelegate = new EndOperationDelegate(this.OnEndGetMostRecentWhatsNewItem);
            }
            if ((this.onGetMostRecentWhatsNewItemCompletedDelegate == null)) {
                this.onGetMostRecentWhatsNewItemCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetMostRecentWhatsNewItemCompleted);
            }
            base.InvokeAsync(this.onBeginGetMostRecentWhatsNewItemDelegate, null, this.onEndGetMostRecentWhatsNewItemDelegate, this.onGetMostRecentWhatsNewItemCompletedDelegate, userState);
        }
        
        public System.DateTime GetMostRecentSocialActivity(string authToken) {
            return base.Channel.GetMostRecentSocialActivity(authToken);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetMostRecentSocialActivity(string authToken, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetMostRecentSocialActivity(authToken, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.DateTime EndGetMostRecentSocialActivity(System.IAsyncResult result) {
            return base.Channel.EndGetMostRecentSocialActivity(result);
        }
        
        private System.IAsyncResult OnBeginGetMostRecentSocialActivity(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string authToken = ((string)(inValues[0]));
            return this.BeginGetMostRecentSocialActivity(authToken, callback, asyncState);
        }
        
        private object[] OnEndGetMostRecentSocialActivity(System.IAsyncResult result) {
            System.DateTime retVal = this.EndGetMostRecentSocialActivity(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetMostRecentSocialActivityCompleted(object state) {
            if ((this.GetMostRecentSocialActivityCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetMostRecentSocialActivityCompleted(this, new GetMostRecentSocialActivityCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetMostRecentSocialActivityAsync(string authToken) {
            this.GetMostRecentSocialActivityAsync(authToken, null);
        }
        
        public void GetMostRecentSocialActivityAsync(string authToken, object userState) {
            if ((this.onBeginGetMostRecentSocialActivityDelegate == null)) {
                this.onBeginGetMostRecentSocialActivityDelegate = new BeginOperationDelegate(this.OnBeginGetMostRecentSocialActivity);
            }
            if ((this.onEndGetMostRecentSocialActivityDelegate == null)) {
                this.onEndGetMostRecentSocialActivityDelegate = new EndOperationDelegate(this.OnEndGetMostRecentSocialActivity);
            }
            if ((this.onGetMostRecentSocialActivityCompletedDelegate == null)) {
                this.onGetMostRecentSocialActivityCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetMostRecentSocialActivityCompleted);
            }
            base.InvokeAsync(this.onBeginGetMostRecentSocialActivityDelegate, new object[] {
                        authToken}, this.onEndGetMostRecentSocialActivityDelegate, this.onGetMostRecentSocialActivityCompletedDelegate, userState);
        }
        
        public OSBIDE.Library.Models.Course[] GetCoursesForUser(string authToken) {
            return base.Channel.GetCoursesForUser(authToken);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetCoursesForUser(string authToken, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCoursesForUser(authToken, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public OSBIDE.Library.Models.Course[] EndGetCoursesForUser(System.IAsyncResult result) {
            return base.Channel.EndGetCoursesForUser(result);
        }
        
        private System.IAsyncResult OnBeginGetCoursesForUser(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string authToken = ((string)(inValues[0]));
            return this.BeginGetCoursesForUser(authToken, callback, asyncState);
        }
        
        private object[] OnEndGetCoursesForUser(System.IAsyncResult result) {
            OSBIDE.Library.Models.Course[] retVal = this.EndGetCoursesForUser(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCoursesForUserCompleted(object state) {
            if ((this.GetCoursesForUserCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCoursesForUserCompleted(this, new GetCoursesForUserCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCoursesForUserAsync(string authToken) {
            this.GetCoursesForUserAsync(authToken, null);
        }
        
        public void GetCoursesForUserAsync(string authToken, object userState) {
            if ((this.onBeginGetCoursesForUserDelegate == null)) {
                this.onBeginGetCoursesForUserDelegate = new BeginOperationDelegate(this.OnBeginGetCoursesForUser);
            }
            if ((this.onEndGetCoursesForUserDelegate == null)) {
                this.onEndGetCoursesForUserDelegate = new EndOperationDelegate(this.OnEndGetCoursesForUser);
            }
            if ((this.onGetCoursesForUserCompletedDelegate == null)) {
                this.onGetCoursesForUserCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCoursesForUserCompleted);
            }
            base.InvokeAsync(this.onBeginGetCoursesForUserDelegate, new object[] {
                        authToken}, this.onEndGetCoursesForUserDelegate, this.onGetCoursesForUserCompletedDelegate, userState);
        }
        
        public OSBIDE.Library.Models.Assignment[] GetAssignmentsForCourse(int courseId, string authToken) {
            return base.Channel.GetAssignmentsForCourse(courseId, authToken);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAssignmentsForCourse(int courseId, string authToken, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAssignmentsForCourse(courseId, authToken, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public OSBIDE.Library.Models.Assignment[] EndGetAssignmentsForCourse(System.IAsyncResult result) {
            return base.Channel.EndGetAssignmentsForCourse(result);
        }
        
        private System.IAsyncResult OnBeginGetAssignmentsForCourse(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int courseId = ((int)(inValues[0]));
            string authToken = ((string)(inValues[1]));
            return this.BeginGetAssignmentsForCourse(courseId, authToken, callback, asyncState);
        }
        
        private object[] OnEndGetAssignmentsForCourse(System.IAsyncResult result) {
            OSBIDE.Library.Models.Assignment[] retVal = this.EndGetAssignmentsForCourse(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAssignmentsForCourseCompleted(object state) {
            if ((this.GetAssignmentsForCourseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAssignmentsForCourseCompleted(this, new GetAssignmentsForCourseCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAssignmentsForCourseAsync(int courseId, string authToken) {
            this.GetAssignmentsForCourseAsync(courseId, authToken, null);
        }
        
        public void GetAssignmentsForCourseAsync(int courseId, string authToken, object userState) {
            if ((this.onBeginGetAssignmentsForCourseDelegate == null)) {
                this.onBeginGetAssignmentsForCourseDelegate = new BeginOperationDelegate(this.OnBeginGetAssignmentsForCourse);
            }
            if ((this.onEndGetAssignmentsForCourseDelegate == null)) {
                this.onEndGetAssignmentsForCourseDelegate = new EndOperationDelegate(this.OnEndGetAssignmentsForCourse);
            }
            if ((this.onGetAssignmentsForCourseCompletedDelegate == null)) {
                this.onGetAssignmentsForCourseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAssignmentsForCourseCompleted);
            }
            base.InvokeAsync(this.onBeginGetAssignmentsForCourseDelegate, new object[] {
                        courseId,
                        authToken}, this.onEndGetAssignmentsForCourseDelegate, this.onGetAssignmentsForCourseCompletedDelegate, userState);
        }
        
        public int SubmitAssignment(int assignmentId, OSBIDE.Library.Models.EventLog assignmentLog, string authToken) {
            return base.Channel.SubmitAssignment(assignmentId, assignmentLog, authToken);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSubmitAssignment(int assignmentId, OSBIDE.Library.Models.EventLog assignmentLog, string authToken, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSubmitAssignment(assignmentId, assignmentLog, authToken, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public int EndSubmitAssignment(System.IAsyncResult result) {
            return base.Channel.EndSubmitAssignment(result);
        }
        
        private System.IAsyncResult OnBeginSubmitAssignment(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int assignmentId = ((int)(inValues[0]));
            OSBIDE.Library.Models.EventLog assignmentLog = ((OSBIDE.Library.Models.EventLog)(inValues[1]));
            string authToken = ((string)(inValues[2]));
            return this.BeginSubmitAssignment(assignmentId, assignmentLog, authToken, callback, asyncState);
        }
        
        private object[] OnEndSubmitAssignment(System.IAsyncResult result) {
            int retVal = this.EndSubmitAssignment(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSubmitAssignmentCompleted(object state) {
            if ((this.SubmitAssignmentCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SubmitAssignmentCompleted(this, new SubmitAssignmentCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SubmitAssignmentAsync(int assignmentId, OSBIDE.Library.Models.EventLog assignmentLog, string authToken) {
            this.SubmitAssignmentAsync(assignmentId, assignmentLog, authToken, null);
        }
        
        public void SubmitAssignmentAsync(int assignmentId, OSBIDE.Library.Models.EventLog assignmentLog, string authToken, object userState) {
            if ((this.onBeginSubmitAssignmentDelegate == null)) {
                this.onBeginSubmitAssignmentDelegate = new BeginOperationDelegate(this.OnBeginSubmitAssignment);
            }
            if ((this.onEndSubmitAssignmentDelegate == null)) {
                this.onEndSubmitAssignmentDelegate = new EndOperationDelegate(this.OnEndSubmitAssignment);
            }
            if ((this.onSubmitAssignmentCompletedDelegate == null)) {
                this.onSubmitAssignmentCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSubmitAssignmentCompleted);
            }
            base.InvokeAsync(this.onBeginSubmitAssignmentDelegate, new object[] {
                        assignmentId,
                        assignmentLog,
                        authToken}, this.onEndSubmitAssignmentDelegate, this.onSubmitAssignmentCompletedDelegate, userState);
        }
        
        public System.DateTime GetLastAssignmentSubmitDate(int assignmentId, string authToken) {
            return base.Channel.GetLastAssignmentSubmitDate(assignmentId, authToken);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetLastAssignmentSubmitDate(int assignmentId, string authToken, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetLastAssignmentSubmitDate(assignmentId, authToken, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.DateTime EndGetLastAssignmentSubmitDate(System.IAsyncResult result) {
            return base.Channel.EndGetLastAssignmentSubmitDate(result);
        }
        
        private System.IAsyncResult OnBeginGetLastAssignmentSubmitDate(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int assignmentId = ((int)(inValues[0]));
            string authToken = ((string)(inValues[1]));
            return this.BeginGetLastAssignmentSubmitDate(assignmentId, authToken, callback, asyncState);
        }
        
        private object[] OnEndGetLastAssignmentSubmitDate(System.IAsyncResult result) {
            System.DateTime retVal = this.EndGetLastAssignmentSubmitDate(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetLastAssignmentSubmitDateCompleted(object state) {
            if ((this.GetLastAssignmentSubmitDateCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetLastAssignmentSubmitDateCompleted(this, new GetLastAssignmentSubmitDateCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetLastAssignmentSubmitDateAsync(int assignmentId, string authToken) {
            this.GetLastAssignmentSubmitDateAsync(assignmentId, authToken, null);
        }
        
        public void GetLastAssignmentSubmitDateAsync(int assignmentId, string authToken, object userState) {
            if ((this.onBeginGetLastAssignmentSubmitDateDelegate == null)) {
                this.onBeginGetLastAssignmentSubmitDateDelegate = new BeginOperationDelegate(this.OnBeginGetLastAssignmentSubmitDate);
            }
            if ((this.onEndGetLastAssignmentSubmitDateDelegate == null)) {
                this.onEndGetLastAssignmentSubmitDateDelegate = new EndOperationDelegate(this.OnEndGetLastAssignmentSubmitDate);
            }
            if ((this.onGetLastAssignmentSubmitDateCompletedDelegate == null)) {
                this.onGetLastAssignmentSubmitDateCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetLastAssignmentSubmitDateCompleted);
            }
            base.InvokeAsync(this.onBeginGetLastAssignmentSubmitDateDelegate, new object[] {
                        assignmentId,
                        authToken}, this.onEndGetLastAssignmentSubmitDateDelegate, this.onGetLastAssignmentSubmitDateCompletedDelegate, userState);
        }
        
        public int SubmitLocalErrorLog(OSBIDE.Library.Models.LocalErrorLog errorLog, string authToken) {
            return base.Channel.SubmitLocalErrorLog(errorLog, authToken);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSubmitLocalErrorLog(OSBIDE.Library.Models.LocalErrorLog errorLog, string authToken, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSubmitLocalErrorLog(errorLog, authToken, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public int EndSubmitLocalErrorLog(System.IAsyncResult result) {
            return base.Channel.EndSubmitLocalErrorLog(result);
        }
        
        private System.IAsyncResult OnBeginSubmitLocalErrorLog(object[] inValues, System.AsyncCallback callback, object asyncState) {
            OSBIDE.Library.Models.LocalErrorLog errorLog = ((OSBIDE.Library.Models.LocalErrorLog)(inValues[0]));
            string authToken = ((string)(inValues[1]));
            return this.BeginSubmitLocalErrorLog(errorLog, authToken, callback, asyncState);
        }
        
        private object[] OnEndSubmitLocalErrorLog(System.IAsyncResult result) {
            int retVal = this.EndSubmitLocalErrorLog(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSubmitLocalErrorLogCompleted(object state) {
            if ((this.SubmitLocalErrorLogCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SubmitLocalErrorLogCompleted(this, new SubmitLocalErrorLogCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SubmitLocalErrorLogAsync(OSBIDE.Library.Models.LocalErrorLog errorLog, string authToken) {
            this.SubmitLocalErrorLogAsync(errorLog, authToken, null);
        }
        
        public void SubmitLocalErrorLogAsync(OSBIDE.Library.Models.LocalErrorLog errorLog, string authToken, object userState) {
            if ((this.onBeginSubmitLocalErrorLogDelegate == null)) {
                this.onBeginSubmitLocalErrorLogDelegate = new BeginOperationDelegate(this.OnBeginSubmitLocalErrorLog);
            }
            if ((this.onEndSubmitLocalErrorLogDelegate == null)) {
                this.onEndSubmitLocalErrorLogDelegate = new EndOperationDelegate(this.OnEndSubmitLocalErrorLog);
            }
            if ((this.onSubmitLocalErrorLogCompletedDelegate == null)) {
                this.onSubmitLocalErrorLogCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSubmitLocalErrorLogCompleted);
            }
            base.InvokeAsync(this.onBeginSubmitLocalErrorLogDelegate, new object[] {
                        errorLog,
                        authToken}, this.onEndSubmitLocalErrorLogDelegate, this.onSubmitLocalErrorLogCompletedDelegate, userState);
        }
        
        public int SubmitLog(OSBIDE.Library.Models.EventLog log, string authToken) {
            return base.Channel.SubmitLog(log, authToken);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSubmitLog(OSBIDE.Library.Models.EventLog log, string authToken, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSubmitLog(log, authToken, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public int EndSubmitLog(System.IAsyncResult result) {
            return base.Channel.EndSubmitLog(result);
        }
        
        private System.IAsyncResult OnBeginSubmitLog(object[] inValues, System.AsyncCallback callback, object asyncState) {
            OSBIDE.Library.Models.EventLog log = ((OSBIDE.Library.Models.EventLog)(inValues[0]));
            string authToken = ((string)(inValues[1]));
            return this.BeginSubmitLog(log, authToken, callback, asyncState);
        }
        
        private object[] OnEndSubmitLog(System.IAsyncResult result) {
            int retVal = this.EndSubmitLog(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSubmitLogCompleted(object state) {
            if ((this.SubmitLogCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SubmitLogCompleted(this, new SubmitLogCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SubmitLogAsync(OSBIDE.Library.Models.EventLog log, string authToken) {
            this.SubmitLogAsync(log, authToken, null);
        }
        
        public void SubmitLogAsync(OSBIDE.Library.Models.EventLog log, string authToken, object userState) {
            if ((this.onBeginSubmitLogDelegate == null)) {
                this.onBeginSubmitLogDelegate = new BeginOperationDelegate(this.OnBeginSubmitLog);
            }
            if ((this.onEndSubmitLogDelegate == null)) {
                this.onEndSubmitLogDelegate = new EndOperationDelegate(this.OnEndSubmitLog);
            }
            if ((this.onSubmitLogCompletedDelegate == null)) {
                this.onSubmitLogCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSubmitLogCompleted);
            }
            base.InvokeAsync(this.onBeginSubmitLogDelegate, new object[] {
                        log,
                        authToken}, this.onEndSubmitLogDelegate, this.onSubmitLogCompletedDelegate, userState);
        }
        
        public string LibraryVersionNumber() {
            return base.Channel.LibraryVersionNumber();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginLibraryVersionNumber(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginLibraryVersionNumber(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndLibraryVersionNumber(System.IAsyncResult result) {
            return base.Channel.EndLibraryVersionNumber(result);
        }
        
        private System.IAsyncResult OnBeginLibraryVersionNumber(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginLibraryVersionNumber(callback, asyncState);
        }
        
        private object[] OnEndLibraryVersionNumber(System.IAsyncResult result) {
            string retVal = this.EndLibraryVersionNumber(result);
            return new object[] {
                    retVal};
        }
        
        private void OnLibraryVersionNumberCompleted(object state) {
            if ((this.LibraryVersionNumberCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.LibraryVersionNumberCompleted(this, new LibraryVersionNumberCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void LibraryVersionNumberAsync() {
            this.LibraryVersionNumberAsync(null);
        }
        
        public void LibraryVersionNumberAsync(object userState) {
            if ((this.onBeginLibraryVersionNumberDelegate == null)) {
                this.onBeginLibraryVersionNumberDelegate = new BeginOperationDelegate(this.OnBeginLibraryVersionNumber);
            }
            if ((this.onEndLibraryVersionNumberDelegate == null)) {
                this.onEndLibraryVersionNumberDelegate = new EndOperationDelegate(this.OnEndLibraryVersionNumber);
            }
            if ((this.onLibraryVersionNumberCompletedDelegate == null)) {
                this.onLibraryVersionNumberCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnLibraryVersionNumberCompleted);
            }
            base.InvokeAsync(this.onBeginLibraryVersionNumberDelegate, null, this.onEndLibraryVersionNumberDelegate, this.onLibraryVersionNumberCompletedDelegate, userState);
        }
        
        public string OsbidePackageUrl() {
            return base.Channel.OsbidePackageUrl();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginOsbidePackageUrl(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginOsbidePackageUrl(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndOsbidePackageUrl(System.IAsyncResult result) {
            return base.Channel.EndOsbidePackageUrl(result);
        }
        
        private System.IAsyncResult OnBeginOsbidePackageUrl(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginOsbidePackageUrl(callback, asyncState);
        }
        
        private object[] OnEndOsbidePackageUrl(System.IAsyncResult result) {
            string retVal = this.EndOsbidePackageUrl(result);
            return new object[] {
                    retVal};
        }
        
        private void OnOsbidePackageUrlCompleted(object state) {
            if ((this.OsbidePackageUrlCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OsbidePackageUrlCompleted(this, new OsbidePackageUrlCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OsbidePackageUrlAsync() {
            this.OsbidePackageUrlAsync(null);
        }
        
        public void OsbidePackageUrlAsync(object userState) {
            if ((this.onBeginOsbidePackageUrlDelegate == null)) {
                this.onBeginOsbidePackageUrlDelegate = new BeginOperationDelegate(this.OnBeginOsbidePackageUrl);
            }
            if ((this.onEndOsbidePackageUrlDelegate == null)) {
                this.onEndOsbidePackageUrlDelegate = new EndOperationDelegate(this.OnEndOsbidePackageUrl);
            }
            if ((this.onOsbidePackageUrlCompletedDelegate == null)) {
                this.onOsbidePackageUrlCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOsbidePackageUrlCompleted);
            }
            base.InvokeAsync(this.onBeginOsbidePackageUrlDelegate, null, this.onEndOsbidePackageUrlDelegate, this.onOsbidePackageUrlCompletedDelegate, userState);
        }
    }
}
